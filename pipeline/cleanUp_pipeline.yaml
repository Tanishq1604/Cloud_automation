trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: cloud-credentials
  - name: pythonVersion
    value: '3.9'

stages:
  - stage: Setup
    displayName: 'Environment Setup'
    jobs:
      - job: PrepareEnvironment
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Set Python Version'
          
          - script: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
            displayName: 'Install Dependencies'

  - stage: GCPCleanup
    displayName: 'GCP Resource Cleanup'
    dependsOn: Setup
    jobs:
      - job: GCPResourceCleanup
        steps:
          - task: GoogleCloudSdkInstaller@0
            displayName: 'Install Google Cloud SDK'

          - task: GoogleCloudAuthenticate@0
            inputs:
              serviceAccountKey: $(GCP_SERVICE_ACCOUNT_KEY)
              projectId: $(GCP_PROJECT_ID)
            displayName: 'Authenticate with GCP'

          - task: PythonScript@0
            inputs:
              scriptSource: 'filePath'
              scriptPath: '$(System.DefaultWorkingDirectory)/scripts/gcp_cleanup.py'
            displayName: 'Run GCP Cleanup'
            env:
              GCP_PROJECT_ID: $(GCP_PROJECT_ID)

  - stage: AzureCleanup
    displayName: 'Azure Resource Cleanup'
    dependsOn: Setup
    jobs:
      - job: AzureResourceCleanup
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: '$(AZURE_SUBSCRIPTION)'
              scriptType: 'pscore'
              scriptLocation: 'scriptPath'
              scriptPath: '$(System.DefaultWorkingDirectory)/scripts/azure_cleanup.py'
            displayName: 'Run Azure Cleanup'

  - stage: Validation
    displayName: 'Cleanup Validation'
    dependsOn: 
      - GCPCleanup
      - AzureCleanup
    jobs:
      - job: ValidateCleanup
        steps:
          - task: PythonScript@0
            inputs:
              scriptSource: 'filePath'
              scriptPath: '$(System.DefaultWorkingDirectory)/scripts/validate_cleanup.py'
            displayName: 'Validate Cleanup Results'

  - stage: Reporting
    displayName: 'Generate Reports'
    dependsOn: Validation
    condition: always()
    jobs:
      - job: GenerateReport
        steps:
          - task: PythonScript@0
            inputs:
              scriptSource: 'filePath'
              scriptPath: '$(System.DefaultWorkingDirectory)/scripts/generate_report.py'
            displayName: 'Generate Cleanup Report'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/reports'
              artifact: 'cleanup-reports'
              publishLocation: 'pipeline'
            displayName: 'Publish Reports'

          - task: SendEmailNotification@1
            inputs:
              to: '$(NOTIFICATION_EMAIL)'
              subject: 'Cloud Resource Cleanup Report'
              body: 'The cleanup process has completed. Please check the attached reports.'
              attachments: '$(System.DefaultWorkingDirectory)/reports/summary.html'
            displayName: 'Send Report Email'
